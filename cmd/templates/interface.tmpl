// Code generated by steamworkswebapigen. DO NOT EDIT.
// generated version: {{ .AppVersion }}
package {{ .PackageName }}

import (
    "fmt"
)

{{ range $_, $interface := .Interfaces -}}

    type {{ camelCase $interface.Name }} struct {
    }

    type {{ $interface.Name }} interface {
    {{ range $_, $method := $interface.Methods -}}
        {{ $method.Name }}V{{ $method.Version }} (input {{ getInputName $interface.Name $method }}) (Response, error)
    {{ end }}
    }

    func New{{ $interface.Name }}() {{ $interface.Name }} {
        return &{{ camelCase $interface.Name }}{}
    }

    {{ range $_, $method := $interface.Methods -}}
        type {{ getInputName $interface.Name $method }} struct {
            {{ range $_, $parameter := $method.Parameters }}
                {{ convertArg $parameter.Name }} {{ convertType $parameter.Type }}
            {{- end }}
        }


    func (i *{{ camelCase $interface.Name }}) {{ $method.Name }}V{{ $method.Version }} (
        input {{ getInputName $interface.Name $method }},
    ) (Response, error) {
    p := getPath("{{ $interface.Name }}", "{{ $method.Name }}", {{ $method.Version }})
    request := map[string]string{
        {{- range $_, $parameter := $method.Parameters }}
        "{{ convertMapFieldKey $parameter.Name }}" : {{ convertToString $parameter.Name }},
        {{- end }}
    }
    response := Response{}
    uri := buildURL(p, request)

    {{ if eq $method.Httpmethod "GET" }}
    if err := get(uri, &response); err != nil {
        return nil, err
    }
    {{ else if eq $method.Httpmethod "POST" }}
    if err := post(uri, &response); err != nil {
        return nil, err
    }
    {{ end }}
    return response, nil
}
{{ end }}

{{ end }}