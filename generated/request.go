// Code generated by steamworkswebapigen. DO NOT EDIT.
// generated version: v0.1.0
package steamworks

import (
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"net/url"
)

func getPath(serviceInterface string, method string, version int) string {
	return fmt.Sprintf("https://api.steampowered.com/%s/%s/v%d/", serviceInterface, method, version)
}

func buildURL(path string, queries map[string]string) string {
	if queries == nil {
		queries = map[string]string{}
	}

	// build query
	u, _ := url.ParseRequestURI(path)
	q := u.Query()
	for k, v := range queries {
		q.Add(k, v)
	}
	// Encode query
	u.RawQuery = q.Encode()
	u = u.JoinPath(path)

	return u.String()
}

func get(endpoint string, p any) error {
	resp, err := http.Get(endpoint)
	if err != nil {
		return err
	}
	defer resp.Body.Close()

	b, err := io.ReadAll(resp.Body)
	if err != nil {
		return err
	}

	if p == nil {
		return nil
	}

	return json.Unmarshal(b, p)
}

func post(endpoint string, p any) error {
	resp, err := http.Post(endpoint, "application/json", nil)
	if err != nil {
		return err
	}
	defer resp.Body.Close()

	b, err := io.ReadAll(resp.Body)
	if err != nil {
		return err
	}

	if p == nil {
		return nil
	}

	return json.Unmarshal(b, p)
}
