// Code generated by steamworkswebapigen. DO NOT EDIT.
// generated version: {{ .AppVersion }}
package {{ .PackageName }}

import (
    "fmt"
    "strconv"
)

{{ range $_, $interface := .Interfaces -}}

type {{ $interface.Name }} struct {
}

func New{{ $interface.Name }}() *{{ $interface.Name }} {
    return &{{ $interface.Name }}{}
}

{{ range $_, $method := $interface.Methods -}}
func (i *{{ $interface.Name }}) {{ $method.Name }}V{{ $method.Version }} (
{{- range $_, $parameter := $method.Parameters -}}
    {{ if isValidType $parameter.Type }}
    {{ convertArg $parameter.Name }} {{ $parameter.Type }},
    {{- end }}
{{- end }}
) (Response, error) {
    p := getPath("{{ $interface.Name }}", "{{ $method.Name }}", {{ $method.Version }})
    request := map[string]string{
        {{- range $_, $parameter := $method.Parameters }}
        {{- if isValidType $parameter.Type }}
        "{{ convertArg $parameter.Name }}" : {{ convertToString $parameter.Type $parameter.Name }},
        {{- end }}
        {{- end }}
    }
    response := Response{}
    uri := buildURL(p, request)

    {{ if eq $method.Httpmethod "GET" }}
    if err := get(uri, &response); err != nil {
        return nil, err
    }
    {{ else if eq $method.Httpmethod "POST" }}
    if err := post(uri, &response); err != nil {
        return nil, err
    }
    {{ end }}
    return response, nil
}
{{ end }}

{{ end }}